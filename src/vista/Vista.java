package vista;

import model.Combate;
import model.Habilidad;
import model.Personaje;
import datos.Datos;

public class Vista {
	private Habilidad habilidad1;
	private Personaje personaje1;
	private Personaje personaje2;
	private static Datos bd = new Datos();

	public static void tituloJuego() {

		System.out.println(
				          "██████╗  █████╗ ████████╗████████╗██╗     ███████╗    ██████╗  ██████╗ ██╗   ██╗ █████╗ ██╗     ███████╗       \r\n"
						+ "██╔══██╗██╔══██╗╚══██╔══╝╚══██╔══╝██║     ██╔════╝    ██╔══██╗██╔═══██╗╚██╗ ██╔╝██╔══██╗██║     ██╔════╝    ██╗\r\n"
						+ "██████╔╝███████║   ██║      ██║   ██║     █████╗      ██████╔╝██║   ██║ ╚████╔╝ ███████║██║     █████╗      ╚═╝\r\n"
						+ "██╔══██╗██╔══██║   ██║      ██║   ██║     ██╔══╝      ██╔══██╗██║   ██║  ╚██╔╝  ██╔══██║██║     ██╔══╝      ██╗\r\n"
						+ "██████╔╝██║  ██║   ██║      ██║   ███████╗███████╗    ██║  ██║╚██████╔╝   ██║   ██║  ██║███████╗███████╗    ╚═╝\r\n"
						+ "╚═════╝ ╚═╝  ╚═╝   ╚═╝      ╚═╝   ╚══════╝╚══════╝    ╚═╝  ╚═╝ ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚══════╝╚══════╝       \r\n"
						+ "                                                                                                               \r\n"
						+ "    ██████╗  █████╗ ████████╗████████╗██╗     ███████╗    ███╗   ███╗ █████╗  ██████╗ ███████╗███████╗         \r\n"
						+ "    ██╔══██╗██╔══██╗╚══██╔══╝╚══██╔══╝██║     ██╔════╝    ████╗ ████║██╔══██╗██╔════╝ ██╔════╝██╔════╝         \r\n"
						+ "    ██████╔╝███████║   ██║      ██║   ██║     █████╗      ██╔████╔██║███████║██║  ███╗█████╗  ███████╗         \r\n"
						+ "    ██╔══██╗██╔══██║   ██║      ██║   ██║     ██╔══╝      ██║╚██╔╝██║██╔══██║██║   ██║██╔══╝  ╚════██║         \r\n"
						+ "    ██████╔╝██║  ██║   ██║      ██║   ███████╗███████╗    ██║ ╚═╝ ██║██║  ██║╚██████╔╝███████╗███████║         \r\n"
						+ "    ╚═════╝ ╚═╝  ╚═╝   ╚═╝      ╚═╝   ╚══════╝╚══════╝    ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝         \r\n"
						+ "                                                                                                               ");
	}

	public static void imagenTitulo() {
		System.out.println("            \\                                           ___/________\r\n"
				+ "\t       ___   )                    ,  @                    /    \\  \\\r\n"
				+ "\t    @___, \\ /                  @__\\  /\\              @___/      \\@/\r\n"
				+ "\t   /\\__,   |                  /\\_, \\/ /             /\\__/        |\r\n"
				+ "\t  / \\    / @\\                / \\   (               / \\ /        / \\\r\n"
				+ "\t_/__|___/___/_______________/__|____\\_____________/__/__________|__\\__\n\n");
	}

	public static void imagenFight() {
		System.out.println("╔═╗╦╔═╗╦ ╦╔╦╗┬\r\n" + 
		                   "╠╣ ║║ ╦╠═╣ ║ │\r\n" + 
		                   "╚  ╩╚═╝╩ ╩ ╩ o");
	}
	public static void menuPrincipal() {
		System.out.println(" ██╗       ████████╗██╗   ██╗████████╗ ██████╗ ██████╗ ██╗ █████╗ ██╗     \r\n"
				         + "███║       ╚══██╔══╝██║   ██║╚══██╔══╝██╔═══██╗██╔══██╗██║██╔══██╗██║     \r\n"
				         + "╚██║          ██║   ██║   ██║   ██║   ██║   ██║██████╔╝██║███████║██║     \r\n"
				         + " ██║          ██║   ██║   ██║   ██║   ██║   ██║██╔══██╗██║██╔══██║██║     \r\n"
				         + " ██║██╗       ██║   ╚██████╔╝   ██║   ╚██████╔╝██║  ██║██║██║  ██║███████╗\r\n"
				         + " ╚═╝╚═╝       ╚═╝    ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝╚═╝  ╚═╝╚══════╝\r\n"
				         + "                                                                          \r\n"
				         + "██████╗             ██╗██╗   ██╗ ██████╗  █████╗ ██████╗                  \r\n"
				         + "╚════██╗            ██║██║   ██║██╔════╝ ██╔══██╗██╔══██╗                 \r\n"
				         + " █████╔╝            ██║██║   ██║██║  ███╗███████║██████╔╝                 \r\n"
				         + "██╔═══╝        ██   ██║██║   ██║██║   ██║██╔══██║██╔══██╗                 \r\n"
				         + "███████╗██╗    ╚█████╔╝╚██████╔╝╚██████╔╝██║  ██║██║  ██║                 \r\n"
				         + "╚══════╝╚═╝     ╚════╝  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝                 \r\n"
				         + "                                                                          \r\n"
				         + "██████╗        ███████╗ █████╗ ██╗     ██╗██████╗                         \r\n"
				         + "╚════██╗       ██╔════╝██╔══██╗██║     ██║██╔══██╗                        \r\n"
				         + " █████╔╝       ███████╗███████║██║     ██║██████╔╝                        \r\n"
				         + " ╚═══██╗       ╚════██║██╔══██║██║     ██║██╔══██╗                        \r\n"
				         + "██████╔╝██╗    ███████║██║  ██║███████╗██║██║  ██║                        \r\n"
				         + "╚═════╝ ╚═╝    ╚══════╝╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═╝\n\n");
	}

	public static void tutorial() {
		System.out.println(
				"Bienvenido al Tutorial , aquí aprenderás las técnicas y habilidades de combate básicas para defenderte en el campo de batalla.\n\n"
						+ "En Battle Mages, tus habilidades dependen del elemento que elijas, y cada elemento tiene sus propias características.\n\n"
						+ "FUEGO hace mucho daño a costa de peores habilidades defensivas.\nTIERRA es justo lo contrario, buena defensa pero un ataque pobre.\n"
						+ "HIELO está en un punto medio, pero se decanta más por el ataque.\nELÉCTRICO tiene menos potencia pero sus habilidades cuestan menos maná.\n"
						+ "A AIRE le pasa algo parecido pero de manera más intensa; coste de maná muy bajo y muy poca potencia.\n"
						+ "Las habilidades de VENENO cuestan bastante maná, pero son muy potentes.\nFinalmente AGUA es el más equilibrado.\n\n ¿Qué elemento deseas elegir? : ");
	}

	public static void tutorial2(Personaje p1) {
		System.out.println(
				"Bien. Antes de empezar, déjame explicarte como funciona el combate.\nCada elemento tiene 4 habilidades: un ataque normal, un ataque potente, una habilidad defensiva"
						+ " y la habilidad de curación. \nTodas ellas cuestan maná, y tan solo puedes usar la curación dos veces por combate. \n"
						+ "Aparte de las habilidades, tienes otras dos opciones: moverte y descansar. \nMoverte te sirve para acercarte o alejarte de tu enemigo. "
						+ "Cuanto más cerca estés de él más daño le harás, pero también él a ti, así que ten cuidado. \nDescansar sirve para cuando te quedas sin maná. "
						+ "No harás nada ese turno a cambio de recuperar 30 puntos de maná extra (además de los 20 que recuperas al principio de cada turno).\n"
						+ "Empezarás con 500 puntos de vida frente a los 100 de tus oponentes. Esto es para compensar el hecho de que tendrás que ganar 4 batallas"
						+ " seguidas para completar el juego. \nEl mapa se irá haciendo más pequeño a medida que avancen los combates, como en cualquier Battle"
						+ " Royale que se precie." + " \n\n" + "Te presento al " + p1.getNombre()
						+ ". Es algo tímido, pero cuando coge confianza, ¡se vuelve loco!\n"
						+ "Tu primer combate será contra él. Un objetivo sencillo para coger la técnica. Introduce cualquier número cuando estés preparado.\n\n");
	}

	public static void finTutorial() {
		System.out.println(
				"¡Muy bien hecho! Con eso debería ser suficiente para que puedas defenderte en el campo de batalla por ti mismo. \n"
						+ "Introduce cualquier número cuando estés listo.");
	}

	public static void presentacion() {
		System.out.println(
				"[Breve introducción a la historia del juego. Descripción del paisaje que ve el jugador. Descripción de los 4 "
						+ "enemigos a los que se puede enfrentar, dando a entender que los está viendo a los 4 y que están a una distancia similar.]"
						+ "¿A por qué enemigo deseas ir primero? \n" + "1. Álvaro (Fuego) \n" + "2. Antonio (Agua) \n"
						+ "3. Alejandro (Tierra) \n" + "4. Dani (Aire) \n");
	}

	public static void opcionesCombate(Personaje p) {
		System.out.println(p.getNombre() + ", ¿qué deseas hacer?: \n1. Lanzar una habilidad\n2. Moverse\n3. Descansar");
	}

	public static void despedida(String n) {
		System.out.println("Gracias por utilizar nuestra app " + n + " hasta luego.\n");
	}

	public String mostrarNombreHabilidades() {
		return habilidad1.getNombre();
	}

	public static void mostrarVidaPersonaje(Personaje p1) {
		System.out.println(p1.getSalud());
	}

	public static void mostrarManaPersonaje(Personaje p1) {
		System.out.println(p1.getMana());
	}

	public static void mostrarVidaEnemigo(Personaje p2) {
		System.out.println(p2.getSalud());
	}

	public static void mostrarManaEnemigo(Personaje p2) {
		System.out.println(p2.getMana());
	}

	public static void movimientoPers() {

		System.out.println("¡Has llegado al límite del mapa!");

	}

	public static void errorCura() {

		System.out.println("Solo puedes curarte dos veces por combate");
	}

	public static void errorMana() {

		System.out.println("¡No tienes suficiente maná! Usa las habilidades con cabeza.");
	}

	public static void direccion() {
		System.out.println("¿En qué dirección? \n0. Izquierda \n1. Derecha");
	}

	public static void personajeMuerto() {

		System.out.println("¡Has muerto!");
	}

	public static void numero1al3() {
		System.out.println("Selecciona un número del 1 al 3 por favor");
	}

	public static void numero1al4() {
		System.out.println("Por favor introduce un número del 1 al 4");
	}

	public static void barraVida100() {

		System.out.println("Vida ████████████████████████████████████████");

	}

	public static void barraVida80() {

		System.out.println("Vida ████████████████████████████████");
	}

	public static void barraVida60() {

		System.out.println("Vida ████████████████████████");
	}

	public static void barraVida40() {

		System.out.println("Vida ███████████████████");
	}

	public static void barraVida20() {

		System.out.println("Vida ██████████");
	}

	public static void barraVida10() {

		System.out.println("Vida █████");
	}

	public static void barraMana100() {

		System.out.println("Maná ████████████████████████████████████████");

	}

	public static void barraMana80() {

		System.out.println("Maná ████████████████████████████████");
	}

	public static void barraMana60() {

		System.out.println("Maná ████████████████████████");
	}

	public static void barraMana40() {

		System.out.println("Maná ███████████████████");
	}

	public static void barraMana20() {

		System.out.println("Maná ██████████");
	}

	public static void barraMana10() {

		System.out.println("Maná █████");
	}

	public static void bolaFuego() {

		System.out.println("                                                ,#         \r\n"
				+ "                                        (#    /**          \r\n"
				+ "                                #(    /( .*(,(%%           \r\n"
				+ "                         .  .*((*(*(#(/##. ((%(/..,        \r\n"
				+ "                       ##%###/.**(##/#(. (//(,( %          \r\n"
				+ "                     #(((###.  .*/,*//*,,*//(/#%           \r\n"
				+ "                  .#/*//(/.      .(/*,,.,(((/*             \r\n"
				+ "              .((,,..           **,..../,** (              \r\n"
				+ "           ,#%%               .,. ,,,*.   ((               \r\n"
				+ "          #%%/   *///*.      ..,,,,*,.  (#/(               \r\n"
				+ "        .%%#*,(((#(((////*.  .......  *(*,(                \r\n"
				+ "        %#(*(##(#((//////*/,    .,  .,(..*                 \r\n"
				+ "       /%/,/(#(((//*******//*   .  ... (                   \r\n"
				+ "       %%, *(((///********(//,       ,/                    \r\n"
				+ "       %#  .*(((//******///((*      /                      \r\n"
				+ "       %#.   /((//////////(((.   .(                        \r\n"
				+ "       /%#    *((((////(((#(*  #%#                         \r\n"
				+ "       .%%#,    */((((((#((..(%%/                          \r\n"
				+ "        .(%##*    ,*////**(#%%#.                           \r\n"
				+ "          ,/%%###/***/((#%%%(.                             \r\n"
				+ "               .*(####(/,                                  \r\n" + "                           ");
	}

	public static void fogonazo() {

		System.out.println("                            .`                              \r\n"
				+ "                          `-:`                              \r\n"
				+ "                          ./-                               \r\n"
				+ "                          :/:                               \r\n"
				+ "                          ://`                              \r\n"
				+ "                 `        -//-`                             \r\n"
				+ "               `:/        .///:`                            \r\n"
				+ "               :++`       `:////:`                          \r\n"
				+ "              .+++:        `/////+:`                        \r\n"
				+ "       ``     :++++-        .////++/`     :`                \r\n"
				+ "       `:.   `/++++o.        :///+++:     :s`               \r\n"
				+ "       `::.  `/++++oo.      -o///++++`    /y+               \r\n"
				+ "       -:::` `/++++oo+`    `s////++++`   `oyy`            ` \r\n"
				+ "      .::::` `/++++ooo/    -/////+++/`  `/syy-           `o`\r\n"
				+ "     .:::::`  -++++ooos. `-//////+++.  `:ssyy-           /y:\r\n"
				+ "    `:::::-   .++++ooos+-:://////++.  `:ossyy.          -yyo\r\n"
				+ "   `-:::::`  `:++++ooo/:::://////+:  `/oossys`         -yyyy\r\n"
				+ "  `--:::::-.-//++/.+/:::::://////++:/+ooossy:        `:yyyyy\r\n"
				+ " `---::::::////+/`.:-:::::://////++++oooosso`      `:syyyyyo\r\n"
				+ " .---:::::://///`.---:::::-`/////+++++ooos+`  `-+osyyyyyyyy-\r\n"
				+ "`----::::::///-`.----:::-` :+////+oo.oooo:` `:syyyyyyyyyyyo \r\n"
				+ ".----:::::-.`` `-----:::` -yysssyyys+ooo-  `+yyyyyyyyyyyyo` \r\n"
				+ "-----::::-     .-----::.-+yyyyyyyyyo+oo:   /yyyyyyyyyyyy:`  \r\n"
				+ "-----::::`  ` `------:osyyyyyyyyyyo++oo:` -yyyyyyyyyyy/`    \r\n"
				+ ".----::::`  ```------/ssyyyyyyyyyy+++ooooosyyyyyyyys:`   `  \r\n"
				+ "`----::::` `..`------+ssyyyyyyyyyy-++oooossyyyyyyy-`   `-s  \r\n"
				+ " `---::::. `...------:/+oosyyyyys. `//+ooooyyyyyyyo::/+syo  \r\n"
				+ "  `.-::::-` `.-------`   .yyyyyo..:o:  ```+yyyyyyyyyyyyyy-  \r\n"
				+ "    `.::::. `.-::----.   +yyyyyyyyo.     /syyyyyyyyyyyyy:   \r\n"
				+ "      `.-::. `-::::--:`  syyyyyyo-`      -+ssyyyyyyyyys-    \r\n"
				+ "         `.-. `-:://:--` +yyys/.             `.:+syyo:`     \r\n"
				+ "               ``.--```..``.`                     ``  ");
	}

	public static void napalm() {

		System.out.println("                 &&/                  &&&                  \r\n"
				+ "                  &%#&          &&%##*&(                   \r\n"
				+ "            /    (((#%%%#%%%((%/////,&   ( (#%&       *(&  \r\n"
				+ "    (&      &    &*,*,*###******&*/###&&##%      &/ &  \r\n"
				+ "   &%(   /& #& & *(# ***&&  &*/###*/#*&&%#     ###   \r\n"
				+ "   #*   &&&#%.&%##&   *&&&%&**/##****&%##&     ###   \r\n"
				+ "       /*########/****/#**     ******/#* &%*##&/         \r\n"
				+ "      /*.*./**./*,. *.,**,,. ,*....*///* ***#(&/   #*  # \r\n"
				+ "      &* ,*# *.  *    *******, **.  *****   .*##&/  %&(    \r\n"
				+ "    (&*  ,** #/*******(#%&*, **.,*&&***** .**##%(&(    \r\n"
				+ "    (%,,*(&&****&*&&(####&******.  *&(** ***#####&(   #\r\n"
				+ "       &&(  &&*      ######&&((&&&&&&*****#**/###(%& #&\r\n"
				+ "        (*   (,    */%#*/#&,((&  (#%#*****. .,,**/#.*#%& ( \r\n"
				+ "                   (*###&*&%    (#***      ******#%&   \r\n"
				+ "                  &%####%&*&        &*#/***     ,****###&  \r\n"
				+ "                  &%#&(*#&        ###************###&  \r\n"
				+ "                &  ,* *..*&        /** *,  **/#*####&  \r\n"
				+ "         *(     /(*#(*(*/%/    %*   &(***      ..,,*/#/*&  \r\n"
				+ "         /&       &(( &&&&          &**,.**     *****#%&   \r\n"
				+ "        ###&              &  ,%#%(*,  **,****/###*(&   \r\n"
				+ "  &      *#.&                ,#*/##**,.* *,.***/#*#&(    \r\n"
				+ " ##&/       *     &/   &%#%&&&#,/#** .,*#****#####&    & \r\n"
				+ " *.*,        #%&  *.   #//###(*(/**,  .**.,*(#/(%*       \r\n"
				+ "             #& &&& %&%##*#(#&*#/*** .*#****##&/    /&   \r\n"
				+ "   &&&     & #####(*/#*(*/&&, .,&***** ..*#&     &%#&  \r\n"
				+ "   &&&  &&##*#,(##**/#**&%#& .,*&& .* &..*(&     &%#&  \r\n"
				+ "  &*(##%&*#***%&&(**  .*  */%** /#&/. *& (&*/##& \r\n"
				+ " /%*/#(%%#(&(,,*%/*  */%*&**,,.(##/#%(*##%**%###/*/(*%/\r\n"
				+ " #/**#***&%.(#*/&&/*##.&/***###***###(*#* ,**##\r\n"
				+ "##* ...* ..**###*..*##**, .***#***. . ***#*  .***, *.   .*#\r\n"
				+ "*  . , / (*                            ,    ,.* .          \r\n"
				+ " **                                         . ..,..,.*,.*. ");
	}

	public static void rocaAfilada() {

		System.out.println("                            %%%%%%%.                       \r\n"
				+ "                         @@@###%###%@@                     \r\n"
				+ "                       @@@##%&&&&&&%##%@                   \r\n"
				+ "                       @@#&&&&&&@@%##%&@                 \r\n"
				+ "                     &@@@@@@@@@@@@&#%%%&@@               \r\n"
				+ "                   /@@@####@@@@@@@@&&&&%%%&@@              \r\n"
				+ "                  @@#%%%%%&&&&&@@@@&&&%&&&@&             \r\n"
				+ "                 @@&%&&&@%%%%%@@@@@@@@@@&%@&&@#            \r\n"
				+ "                @@@&&&%%&@@@%%@@@@@@@@@@@&@@&&&            \r\n"
				+ "               @@@&&@@@@@@@@@%%##&@@@@@@@@@@&&@/           \r\n"
				+ "               @@@&@@@@@@@@##%%%%%%%@@@@@@@@@&@/           \r\n"
				+ "               @@@&@@@@@@##%%&&&%%%%&&%%@@@@@&@/           \r\n"
				+ "             .@@@@@&%@@@@%&&&&&&&&&&%%&&%@@@&@@/           \r\n"
				+ "           (@@@%%%%%&@@@&&&&@%%%%%&&&&&&&&@@@@@@%          \r\n"
				+ "          &@@%%&@@@@@@@@@@#%%%%%%#@@&&&&@@@%##&@&        \r\n"
				+ "         @@@&&&&@@&@&@@@@@@%%&&&&&&%#@@@&&@@@@&&%%%@       \r\n"
				+ "         @@@@@@@&%&&&@@@@@%&&&&&&&&&&&@@@@@@@@@&%@       \r\n"
				+ "         @@@@@@%%&&@@@@@@@&&&&@@@&&&&&&@@@@@%&@@&&%@@      \r\n"
				+ "         @@@@@@%&&@@@@@@@@&&@@@@@@@&&&&@@@@@#&&@@@@@@      \r\n"
				+ "          &&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@@@&      \r\n"
				+ "             /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#,          \r\n"
				+ "                          @@@@@@@@@@@@@@           ");
	}

	public static void avalancha() {

		System.out.println("                              .#(((                        \r\n"
				+ "                      ,%%, #%%%%(%%#.,,,..                 \r\n"
				+ "                     ./%%#%(%%%%%%%(,,,,,*,                \r\n"
				+ "            .%%%##*///*%%(%(%####%@&&//(#%%/,              \r\n"
				+ "            #%%%%&////(&%/#%%&%%%(///#%%&%#%###/(          \r\n"
				+ "     ,%%%% (%%%%#%%%%*,,..((%##*#(*///&%%%,,,,#%##       \r\n"
				+ "     (%%%&*/,%&&(#(%,#,..,./,,.,,,###&,,,/,,,,,%#(// **    \r\n"
				+ " #####(*#%%%%/#%%##%%%*,**/&*,,,,*/%%,.,,,/,,*&%%##(/*(*,  \r\n"
				+ " ##///(#%%%&&&/%%%&&%%%%&@%%%%###%%%#/////,,,, #%%%%/#*##, \r\n"
				+ "  ////(#%#/*,,*#%#////&&%#%#%#/##(&&(/,/*//*(///*/#####(%#(\r\n"
				+ " ..//((##%....,,&/**####%*%%/###%#####%(//(//,,,,,%*###%%#*\r\n"
				+ "   .......,..,,*#(/#(/##%&%#(*#%#%%%%#%##%%*#,,,,,#%####,. \r\n"
				+ "       ...  .......(###%%#*####%#%#%%%&%######/**/#(*.     \r\n"
				+ "               ..............,*,,##%%%%####%%#*..          \r\n"
				+ "         */#%%/ ..       ...............,#%%%*,,.          \r\n"
				+ "        .(#%%%//##%#                ......                 \r\n"
				+ "  #/####  #%%#(#%%%&%#%&%/                                 \r\n"
				+ " /(##%##////(/,%%%%%&&%#                                 \r\n"
				+ " .#####*,/(((((    .%&&&%#                                 \r\n"
				+ "   ,###*/((#((...,,,, ,,.                                  \r\n"
				+ "        /((((...,,,*,,                                     \r\n"
				+ "          .,*..,,****,                                     \r\n"
				+ "              .,*****                                      \r\n" + "                 .,.  ");
	}

	public static void muroSismico() {

		System.out.println("/((((//(((((#(#%((#*******************/////////////////////\r\n"
				+ "/(//////(//((((#((####(((,,,,,,,,,************/////////////\r\n"
				+ "((/*//////(////#///(/////((%/((,,,,,,,,,**************//***\r\n"
				+ "(#//*//////////(//******///#*/(((/((%/,,,..,,,,************\r\n"
				+ "##//////////*/*(*/*,****/*,#/******/#/(((((#/,,,,,,,,******\r\n"
				+ "#(/(////////***(//,*,******#,*,*****(//***/((((((%*,,,,,,,,\r\n"
				+ "((/////(/////**/((,*,******#//,,****(******//***/%(((#(,,,,\r\n"
				+ "((////(//////**//(*********#(/*,****(//,****/,***#/*//#(((#\r\n"
				+ "((/////////////((/***/*****#//******///*****(/**/((*//%///#\r\n"
				+ "(//////////////*//*********#//***/*////*****//*///(///%(//%\r\n"
				+ "#///////////**((((****/****#//*****/*//**///(/*///(/(/%#(/%\r\n"
				+ "(//////////***#/((*********#(/*******((**/**((*///(///##((%\r\n"
				+ "#//(/(//////**#(((*/*****,*#((*****,*((*****((////#///(#//(\r\n"
				+ "((((((//((//(/%#((///*//*//%((//*/*///(///*/#(////#(///#((/\r\n"
				+ "#######((#(###%#((((((((((#%((((((((#(((((##%##(###(######%\r\n"
				+ "#####%%#%%####%##(#%####%##%(#####(////*///(/*/(/#(##(#####");
	}

	public static void ceroAbsoluto() {

		System.out.println("           *&@@@/            \r\n" + "       @@@@@@@@@@@@@@        \r\n"
				+ "     @@@@@@@    @@@@@@@      \r\n" + "    @@@@@@@      @@@@@@@.    \r\n"
				+ "   @@@@@@@*      %@@@@@@@    \r\n" + "  @@@@@@@@        @@@@@@@@   \r\n"
				+ "  @@@@@@@@        @@@@@@@@   \r\n" + " %@@@@@@@@        @@@@@@@@&  \r\n"
				+ " @@@@@@@@@        @@@@@@@@@  \r\n" + " @@@@@@@@@        @@@@@@@@@  \r\n"
				+ " @@@@@@@@@        @@@@@@@@@  \r\n" + " @@@@@@@@@        @@@@@@@@@  \r\n"
				+ " @@@@@@@@@        @@@@@@@@@  \r\n" + " &@@@@@@@@        @@@@@@@@@  \r\n"
				+ " .@@@@@@@@        @@@@@@@@,  \r\n" + "  @@@@@@@@        @@@@@@@@   \r\n"
				+ "  ,@@@@@@@       *@@@@@@@/   \r\n" + "   &@@@@@@@      @@@@@@@@    \r\n"
				+ "    %@@@@@@,    #@@@@@@#     \r\n" + "      @@@@@@@/#@@@@@@@       \r\n"
				+ "         @@@@@@@@@@       ");
	}

	public static void iceberg() {

		System.out.println(" , ,  , ,  , ,  , .  , , .,* .,, , ,, , ,. , .  , ,  , ,  ,\r\n"
				+ " , ,  , ,  , ,  , ,  , , .& ,  , , ,, , ,. , ,  , ,  , ,  ,\r\n"
				+ " . .  . .  . .  . .  . . @ ( (  @. .@@. .. . .  . .  . .  .\r\n"
				+ ", , ., , ,, , ,. , ,. , & ((((((  .  ,.*  , , ., , ., , ,, \r\n"
				+ ", , ., , ,, , ,. , ,. ,. //(((((((  , ,  @, , ., , .. , ,, \r\n"
				+ " , ,  , ,  , ,  , ,  , ///(((((((((   *(. ,, ,  , ,  , ,  ,\r\n"
				+ " , ,  , ,  , ,  , ,   (///(((((((((( /(((    ,  , ,  , ,  ,\r\n"
				+ " , ,  , ,  , ,  , ,  (///////(((((((((((((,  .  , ,  , ,  ,\r\n"
				+ ", , ., , ,, , ,. ,% (((//((////(((((((##((((, ., , ., , ,, \r\n"
				+ ". , ., , ,, , ,. @ (((((((((((/(((((((###((((( & , .. , ,, \r\n"
				+ " . .  . .  . .  #.(((((((((((((((((((((###(((((   &  . .  .\r\n"
				+ " , ,  , ,  , ,  (((((((((((((((((((((((######((( / & , ,  ,\r\n"
				+ " , ,  , ,  , % ((((#((((((((((((((((((((######((((( @. ,  ,\r\n"
				+ ", , ., , ,,@ ,((((#((((((((((((((((((((((######((((( %, ,, \r\n"
				+ ", , ., , %   (((###(((((##((((((((((&*/((((//#((((( & ,, \r\n"
				+ ", , .,     ((((###((((####((((##((##//(((((((//((/*@((( *, \r\n"
				+ " , ,     (((((####################@/((((((####((((((@((( .,\r\n"
				+ " . @ /((((((#####################/((((##(((#####((((((#(( ,");
	}

	public static void sobreCarga() {

		System.out
				.println("     ,                                   ((                                  (.          \r\n"
						+ "       ./                            (.      ,                           ( ((            \r\n"
						+ "          (.((                       ,   (( *    ( /.(                 ((((              \r\n"
						+ "            ((((         ./           /   (       (((((              /(                  \r\n"
						+ "                ((       (/  .,        .(      (   (         (      (                    \r\n"
						+ "                  .(            /    (            (      ( (      (                      \r\n"
						+ "                     (           (   (    (// (/       (((      (              *(.       \r\n"
						+ "     (/*(/             ,   /*(            (*((   ,    ( ,     ,           *              \r\n"
						+ "              ./,         .    ((     /     (   .   (                *(((                \r\n"
						+ "             /        /           (    *    /.(       (*         (                       \r\n"
						+ "      *(  (              ,  ((((                  (                           ( ((   ,   \r\n"
						+ "   (((((((                  ((((((((,   /         ((     /((                  .((((,     \r\n"
						+ "     (((((((((((.            ((((((((((/((((((((##((            (            *(((((((    \r\n"
						+ "   ((.((((             (        .((( ,  (,( (((((((((   (     ( /   /         (* (*      \r\n"
						+ "      (  (         /      (       /   * (((((( *(  (((   (((   .  (    .                 \r\n"
						+ "     (          *    (                  ((,((,  (  ((((    .*    .  (*                   \r\n"
						+ "                   (   /        ./    /(((((((  (((((((       .       ((                 \r\n"
						+ "                ((            *(       (((((((((((%&%%&/                /(.              \r\n"
						+ "              ((            .*(          (((&  (  %    /                  /((            \r\n"
						+ "           /((              (           %&  &     (                     .((((          \r\n"
						+ "         (((((                          ((% (((((((((                        ((          \r\n"
						+ "         .(                              (( (((((((((.                         **        \r\n"
						+ "        (                                (( ((((((((((/                                  \r\n"
						+ "                                         ((((((((((((( *                                 \r\n"
						+ "                                         (((((((((((((  ");
	}

	public static void tormentaElectrica() {

		System.out.println("                                                           \r\n"
				+ "                                                           \r\n"
				+ "                                                           \r\n"
				+ "                                           ,               \r\n"
				+ "                                         ,,                \r\n"
				+ "                                        ,,                 \r\n"
				+ "                                      ,,                   \r\n"
				+ "                                    ,,,                    \r\n"
				+ "                                  .,,,                     \r\n"
				+ "                                 ,,,,                      \r\n"
				+ "                               ,,,,,                       \r\n"
				+ "                             *,,,,,                        \r\n"
				+ "                            *,,,,,                         \r\n"
				+ "                          ,,,,,,*                          \r\n"
				+ "                        **,,,,,,                           \r\n"
				+ "                      ,*,,,,,,                             \r\n"
				+ "                     ,,,,,,,,                              \r\n"
				+ "                   ,,,,,,,,,,,,,,,,,,,,,,,,,               \r\n"
				+ "                 ,,,,,,,,,,,,,,,,,,,,,,,,,,                \r\n"
				+ "               .,,,,,,,,,,,,,,,,,,,,,,,,,                  \r\n"
				+ "                              ,,,,,,,,,                    \r\n"
				+ "                             ,,,,,,,,                      \r\n"
				+ "                            *,,,,,,,                       \r\n"
				+ "                           ,,*,,,,                         \r\n"
				+ "                          ,*,,,,                           \r\n"
				+ "                         ,*,,,,                            \r\n"
				+ "                        ,,,,,                              \r\n"
				+ "                      .,,,,                                \r\n"
				+ "                     ,,,,                                  \r\n"
				+ "                    ,,,,                                   \r\n"
				+ "                   ,,,                                     \r\n"
				+ "                  ,,                                       \r\n"
				+ "                 ,.                                        \r\n"
				+ "                ,                                          \r\n" + "                    ");
	}

	public static void murallaVolatil() {

		System.out.println("*************************,,,,**/***********/**/********************************\r\n"
				+ "**********************,,,,,,,,,,***********,,,,,,******************************\r\n"
				+ "*********************,,,,,,,,,,,,*//*,,,,,,,,,,,,,*****************************\r\n"
				+ "********************/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/*/******************\r\n"
				+ "************,,,,**,,,,,,,,,      ,,,,,,.   ,,,,,,,,,,@(##@,,,,*****************\r\n"
				+ "***********,,,,,,,,,,,,,.,           ,             .@@@@*@@,,,,,,**/,,,,,/*****\r\n"
				+ "/*,,*/**,,,,,,,,,,,,,@,                           @@@@@@%@*@%,,,,,,,,,,,,,,,,,,\r\n"
				+ ",,,,,,,,,,,,,,,,,,*@@@#&,                      .@@@@@@@%%*@*@@@@,,,,,,,,,,,,,,,\r\n"
				+ ",,,,,,,,,,,,/##@@@@@@@####%                  @@@@@@@##*@&@@@@@@@@*,,,,,,,,,,,\r\n"
				+ ",,,,,,,,##@@@@@@%@@@@#####%        .@##@@@@@@@@@#####*@*@@@##&@@@@@@@@@*,,,,,\r\n"
				+ "###################@#@@@@@@#####@####@@@@%#@@@#######&@(@@@%######@@@@###%@*,\r\n"
				+ "%#######################@@@@@@#####################%@*@@@@#####################\r\n"
				+ "##/*@########&&##########@@######%@@@*@*%**(#/&&@@@@@@#####################\r\n"
				+ "###&@**#&%@@*@/####################&@@*#/****/*@@@@@@@@@@@@##################\r\n"
				+ "#######@@@@@@@@@@%*****(@##########%(@@&(@#@/@*@@@@@@@@@@@#####################\r\n"
				+ "######@%##########@@@@@*************@@@(@@@&*@#@@@@@@@@@######@@@@####%######\r\n"
				+ "#####################&@@@@@@@@@@@@@@@@@@@@@@@%@*@@@@@@@@%##########@@@%#&@@@@@@\r\n"
				+ "@@@######################&%##&@@@@@@@@@@@@@@@%*@*##@@@@@@@@#######&@@########\r\n"
				+ "@@@@@@@@##@%#################&@@@@@####@@@@@@@**@###@@@@@##################\r\n"
				+ "@@@%##@@@@@@@@@###########@@#########@@@@@@@@@(**(@#####@@@@@@@###############@\r\n"
				+ "@@@@######@@#######################@@###@&&&@@(**@@@@@@#####@@@@@##########@@@&\r\n"
				+ "###@@@######################################@@****@#@@@@@%#########&%####@@@@##\r\n"
				+ "######@#########@@@@@@@@@@@@@@@@@@#####%#@@(***@%#####&@#########&%#@@@@@####\r\n"
				+ "##############@@@**/***//**//**/**##&@@@@@@@****@/@@@@@#########%@@@@@@@@@#####\r\n"
				+ "##############@@&****((**/&**%(***@@@@@@@@@****@*@@@@@@@@@@@@@@@@@@@@@@@@######\r\n"
				+ "#############%@@@@@@@@@@@@@@@@@@@@@@@@@@*****@(@@@@@@@@@@@@@@@@@@@@@#########\r\n"
				+ "############@@@@**#**/&***********@@@*****&@*@@@@@@@@@@@@@@@@#############@@&\r\n"
				+ "########%@@@@@@@*@@&*@@#**@@(*****@@@@@@/%@@@@@@@@@@@@@@@@@@@@@###########@@@@#\r\n"
				+ "##@@@@@@@@@@@@@@**#@%****%@@&*@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@##(#####%@@@@@@@#\r\n"
				+ "##@@@@@@@@@@@@@@**@@@(***&@@/*@@%(@@@@@@@@@@@@@@@@@@@@@@########@@@@@@@@@@@##\r\n"
				+ "%@@@@@@@@@###@@@@@@%@@********@@@@*@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@##\r\n"
				+ "############@@@@**@@@@&*#*******@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##\r\n"
				+ "###########@@@@@**@@@@@@@*(*******@@@@(#####@@@@@@@@@@@@@@@@&&%##############\r\n"
				+ "#########&@@@@@&*(@@@@@@@%&*&%&&&&&@@@@@@*%#######(@@@@@@@@@@@@@%##############\r\n"
				+ "######@@@@@@@@@(@@@@@@@@@/@@%*/******&@@@@@@*%######&@@@@@@@@@@@###############\r\n"
				+ "###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&******#@@@@@@@@*(%##########################\r\n"
				+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(*#######################\r\n"
				+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@**/********@@@@@@@@@@@@**/&%################\r\n"
				+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/@/*@***********@@@@@@@@@@@@@/***#%#########");
	}

	public static void dardoEnvenenado() {

		System.out.println("            /(/.                                           \r\n"
				+ "           %%%%%%%/                                        \r\n"
				+ "        .,(%%%%%%%%%.                                      \r\n"
				+ "        %(((#%%%%%%%%,                                     \r\n"
				+ "        %%&(((#%%%%%%%.                                    \r\n"
				+ "        #%&&&/((#%%%%%#                                    \r\n"
				+ "         (&&&&&&((##%%%                                    \r\n"
				+ "          .*&&&&&&&((#(                                    \r\n"
				+ "            ...#%%&%%#%#*                                  \r\n"
				+ "                ....    ##/*                               \r\n"
				+ "                          ##(*                             \r\n"
				+ "                            ##(*                           \r\n"
				+ "                              ###*,                        \r\n"
				+ "                                #%#**                      \r\n"
				+ "                                ..#%#/                     \r\n"
				+ "                                 ..**/*#,,                 \r\n"
				+ "                                   .,((/(%,,               \r\n"
				+ "                                     .*(%*(*/              \r\n"
				+ "                                       .,(*,/.             \r\n"
				+ "                                              *.           \r\n"
				+ "                                                *.         \r\n"
				+ "                                                   #       \r\n"
				+ "                                                     %");
	}

	public static void intoxicacion() {

		System.out.println("                                                           \r\n"
				+ "                                                           \r\n"
				+ "                                                           \r\n"
				+ "                            @@@                            \r\n"
				+ "                           @@@@@*                          \r\n"
				+ "                          @@@@@@@&                         \r\n"
				+ "                         @@@&..@@@@                        \r\n"
				+ "                        @@@#....@@@@                       \r\n"
				+ "                      #@@@(......@@@@                      \r\n"
				+ "                     @@@@,........%@@@                     \r\n"
				+ "                    @@@@...........#@@@/                   \r\n"
				+ "                   @@@@.............,@@@&                  \r\n"
				+ "                  @@@@...../@@@#,.....@@@@                 \r\n"
				+ "                 @@@&...@*........@*...@@@@                \r\n"
				+ "               (@@@,..&/............@...@@@@               \r\n"
				+ "              %@@@,...&@...........@**...@@@@              \r\n"
				+ "             @@@@.....@%...........@/,....#@@@/            \r\n"
				+ "            @@@@.......@.@@@@..@@@%@@......,@@@#           \r\n"
				+ "           @@@@..,,...#*.,@@,@#,@@,((...&@..,@@@&          \r\n"
				+ "         .@@@&...@.,&@(/@@..@@@...@@@@,,.,&...@@@@         \r\n"
				+ "        *@@@/....,.,%@%,#,@*....&@@&@*.........@@@@        \r\n"
				+ "       %@@@,.............@/@@@@@@,@.............@@@@       \r\n"
				+ "      @@@@,..........*@@,,@.....,@,@@*...........(@@@,     \r\n"
				+ "     @@@@.........#*.,@@,..,%@&,.../@&../(........*@@@*    \r\n"
				+ "    @@@@...........*,..................,,..........,@@@&   \r\n"
				+ "   @@@@..............................................@@@@  \r\n"
				+ "  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ \r\n"
				+ "                                                           \r\n");
	}

	public static void trampaAgujas() {

		System.out.println("                                                           \r\n"
				+ "                                                           \r\n"
				+ "                         .*       .                        \r\n"
				+ "               /.        ..      ..        .               \r\n"
				+ "      *        ,.        ,.      ..       ..               \r\n"
				+ "      .,.      ...       ,       ..       ..        ,.     \r\n"
				+ "       ,        ,,       ..              ..        ..      \r\n"
				+ "        ,.        .       ,      .                ..       \r\n"
				+ "         ,,      *,       ,     ..      ,.       ,.        \r\n"
				+ "          *,      *.      *     ,.     ..       ,,         \r\n"
				+ "           /.     .*      *     *      *.      .,          \r\n"
				+ "            (,     /      *.    *     .,      *.           \r\n"
				+ "             /.    .*     ,.   .,     *      *,            \r\n"
				+ "              (.    /.    .,   ,*    *,     *.             \r\n"
				+ "              ./.   ,*    .,   *,   .,     ,.              \r\n"
				+ "                /    /.    ,   *.   *.    *.               \r\n"
				+ "                 *   .*    ,  .*   .,    *.                \r\n"
				+ "                 **   /.   ,  ,,   *    *,                 \r\n"
				+ "                  **  .*   *  *,  ,,   *.                  \r\n"
				+ "                   ,,  /.  *. *. .,   *                    \r\n"
				+ "                    (, ,*  *. *  *,  *,                    \r\n"
				+ "                     (, /, *, , .,  *.                     \r\n"
				+ "                      (..*.*,., *  *                       \r\n"
				+ "                       /./,*,,,,,.*.                       \r\n"
				+ "                       ./,*,,*,*.*                         \r\n"
				+ "                        ./*,,**,/                          \r\n"
				+ "                         .*,,,*/                           \r\n"
				+ "                           ,,*/                            \r\n"
				+ "                            ..    ");
	}

	public static void rayoBurbuja() {

		System.out.println("@@@@@@@@@@&@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&@@@@@@&&&&&&&@@@\r\n"
				+ "@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@&&@&@&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@@&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@& .*,*/((***. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&@@@@& ,/(#%&@&&&&&&%#/, @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&&@& ,*/#&&&&&@&&&%%%%@&// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&&&&,*//(&%#%%&&&@@&@##@@&@,(@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&&&&**,,*/(&&&&&&&@#/%@@@@#%@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "&&&&&&&&&&&&&&&&&&&&&&&&(&(.*#&&&%&&&&&&&@@&&&*@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@@@&&&&&&&&&&&&&&&&&&&&.&&&&&&%&&&&%&&@@@@@@@@@@@#%@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@@@@@@&&&&&&&&&&&&&&&&%%&&&&&&&&&&&&&.&&&@@@@@@@@&@*%@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@*&@*@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n"
				+ "@@@@@@@@@&&&&&&&&&&&&&&&*&&&&&(///&&&&&&&%&&%/,,**@//@@@@@@@@@@@@@@@@@@@@@@@@@&\r\n"
				+ "@@@@@@@@@&&&&&&%%&%%%&&&&,%%&&&((%&&&&&&&/##%(/////*@@@@@@@@@@@@@@@@@@@@@@@@@&&\r\n"
				+ "@@@@@@@@@&&&&%%%%%%%%%%%%%**((&##%&&&&&&&&#(*,*@@@@@@@@@@@@@@@@@@@@@@@@@&&&\r\n"
				+ "@@@@@@@@@&&&&%%%%%%%%%%%%%%&,*(#%%%%(..,%&&((*.@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&\r\n"
				+ "@@@@@@@@&&&&%%%%%%%%%%%%%%%%%%**/(#(#%%%#%#(/,*@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&\r\n"
				+ "@@@@@@@@&&&&%%%%%%%%%%%%%%%%%%%%&&%/.   .(&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&\r\n"
				+ "@@@@@@@@&&&%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&\r\n"
				+ "@@@@@@@@&&&%%%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&\r\n"
				+ "@@@@@@@@&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&\r\n"
				+ "@@@@@@@@&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&");
	}

	public static void maremoto() {

		System.out
				.println("                                                                                         \r\n"
						+ "                                                                                         \r\n"
						+ "                                                                                         \r\n"
						+ "           ##                             ##**/(##                                       \r\n"
						+ "     /***///**/(/                      .#*//#%%%%###/                    ######          \r\n"
						+ "   **///////#%%/#       *(/##(#     ,#///*/#%                       *#(/*///*/((#%%%#    \r\n"
						+ " (*//////////#       #(*//##      ,(///////(#          ##(/%%##(  ##//*///*///##         \r\n"
						+ "#////*//*//////####//*/////(######////////////###   ##////(%   ##//*////////////#/(,   ##\r\n"
						+ "(////////////////////////////////////////////////////////////////////////////////////////\r\n"
						+ "/////////////////////////////////////////////////////////////////////////////////////////\r\n"
						+ "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((");
	}

	public static void torrenteCascada() {

		System.out.println("@@@@@@@@@@.@@@@@@@@@@@@@@@@.@@@@@@@@@@@\r\n" + "@@@@*/.*/./..**..../...*,.***../.@@@@@@\r\n"
				+ "@@@*.*/./(.**./.**.**.*///*,./*((*@@@@@\r\n" + "@@..*/(.(/..(.*(.*(*/.**/**(.*/(((@@@@@\r\n"
				+ "@@..(**/*/*.(*/./*((*(*/**(*/(*/*(,@@@@\r\n" + "@@..*@*(**/(*/*./*((*(*//*(*((*/(/.@@@@\r\n"
				+ "@@@.@@@*/*/(/(/./(((/((//*/*(*/(/.@@@@@\r\n" + "@@..@@@*(*,(/(/.*(((/.((/*/*(*/*.@@@@@@\r\n"
				+ "@@@.@@@*(*.(/(/(*(((/.((/*/*(*/*.@@@@@@\r\n" + "@@..@@@*(/.(*(/(/(*(/((*(*/*(*/*.@@@@@@\r\n"
				+ "@@@@@@/*(/((*(/(/(*(/((((*/*(*/*@@@@@@@\r\n" + "@@@@@./(*/((*(/(/*((/((((*/.(*(*@@@@@@@\r\n"
				+ "@@@@@./(*/,(*(((/*((/((((*/.(*(*@@@@@@@\r\n" + "@@@@@./(*/.(*(((/*(//((((*(.(*(*@@@@@@@\r\n"
				+ "@@@@*/*(**((*(((/((//(*((*(*(*(*@@@@@@@\r\n" + "@@@@*/*(**((*(((/*((/(.((*(*(*(*.@@@@@@\r\n"
				+ "@@@@*@/((*((*(((/*((/(.(/*(*(*(*.@@@@@@\r\n" + "@@@@@@//(/*(/*((/(((/(/(/(*/**(*@@@@@@@\r\n"
				+ "@@@@@@@*(/*(/*((/(((/(/(/(*(.*(*@@@@@@@\r\n" + "@@@@@@@/**(*(//(/(((*(/(*(*(.*(/@@@@@@@\r\n"
				+ "@@@@@@@/**/*(//(/(((*(/(*(*/**(/@@@@@@@\r\n" + "@@@@@@@.//*/(/*(/(((*./(*(*/**(/@@@@@@@\r\n"
				+ "@@@@@@@.//*/(((*/(((*(/(*(*/**(/@@@@@@@\r\n" + "@@@@@@@@@/(.*((*.(((.(/(*(*.**//@@@@@@@\r\n"
				+ "@@@@@@@@@*(.*(/(.(((.(/(,(*.**/@@@@@@@@\r\n" + "@@@@@@@@@*.(*.((/*((.(/(,(*/**/@@@@@@@@\r\n"
				+ "@@@@@@@.@/*(*(,(/.((.(.(*/*(**/*@@@@@@@\r\n" + "@@@@@@@@@**((**(/*((,,/(./*/.*/*@*@@@@@\r\n"
				+ "@@@@@@@@@**..**(/*((*./(,.*.**/*.@@@@@@\r\n" + "@@@@@@@@..*./.*..*.(.(.(,/.(*.*..@*..@@");

	}

	public static void vientoCortante() {

		System.out.println("                        @@@@@@@@@@@@@.                               \r\n"
				+ "                        ..&*********,&@                              \r\n"
				+ "                          @,,,,,,,,,,&@          @@@                 \r\n"
				+ "                           @@///////,&@          @*,@/               \r\n"
				+ "                  */(        @//////,&@         &.*/,#@              \r\n"
				+ "                 @(,,@@      @,,,,,,,&@       @@/,*/,,,@             \r\n"
				+ "               /@,,,,,,@      @&//,,@.       @,,/,,,/*,@             \r\n"
				+ "             @,,,/*,,//,,,@    .@/,,@.     @@,//,/*,/*,,@@           \r\n"
				+ "           @@,,*/,,,/,,,//,@@  .@,,,@.    @,,,//,/*,,,,@             \r\n"
				+ "          @###%%##/*,***,,*,,((/ @/,@.  (((//,**,###///              \r\n"
				+ "                  (@@@@@@@/,,,,,/@(,@. @//,,,,@@@                    \r\n"
				+ "                          @@@@(#*#@&(%#,,,@@@@                       \r\n"
				+ "                           @@@/(@###@@@/                             \r\n"
				+ "                       @@@@,,,@@@@@@/&@@@@@                          \r\n"
				+ "                    @@@,,,,//@/(@/&@@*,/,,/@@@@@@@(                  \r\n"
				+ "              @@@,,,,//,//@//,/(@,%@///@,,,,,/,,,/*,,*/,,,@          \r\n"
				+ "             @,,,,*/,//,,,@//,/(@,,,@(/,@@,//,,,/,,,/*,,@@           \r\n"
				+ "           @@,,*/.*/,,,/.*,,,/*/@,,,/#%/,,###.,,,*,,,(%*             \r\n"
				+ "             @,*/,,.,,,@  /,,/,/@,*//&@/,,/  %,,,,,,@/               \r\n"
				+ "             @,,,/*,/@@   /,,/@&,,,,,,,@,,/   @@,,(@                 \r\n"
				+ "              @#,,*/@     /,,/@&,,,,,,,,@@/                          \r\n"
				+ "               /@,#@      /,,/@&,///////@@/                          \r\n"
				+ "                 @@@    //,// @&,,,,,,,,,,@//                        \r\n"
				+ "                        //,//./*,,,,,,,,,,,@@                        \r\n"
				+ "                        //,//, ./@@/%##@@@@@@                        \r\n"
				+ "                        //,//,*,.   ,,,*//,//                        \r\n"
				+ "                        //,// //,///,// //,//                        \r\n"
				+ "                       /,,/     /,,,/     /,,/                       \r\n"
				+ "                       /,,/  /,*/   /*,/  /,,/                       \r\n"
				+ "                       /,,///,/*     */,///,,/                       \r\n"
				+ "                       /,,,,,/         /,,,,,/                       \r\n"
				+ "                       ,.,,               /,,,                       \r\n"
				+ "                     */,****/           //,*/,**                     \r\n"
				+ "                     //,//***/         /***//,//");
	}

	public static void huracan() {

		System.out.println("                                               ,@@@@@@               \r\n"
				+ "             @@@@@@@@@@%                            @@@@@@@@%        \r\n"
				+ "      @@@@@@@@@@@                                       @@@@@@@@@    \r\n"
				+ "    @@@@@@@@@      @@@@%                       ,@@@@@@      ,@@@@@@  \r\n"
				+ "  %%@@@@@@/**  ##%%****,                        ****@%    ,@@@@@@  \r\n"
				+ "  @@@@&&%%,  **@@##  *******    *********    ***    ##@@****/@@@@##  \r\n"
				+ "  @@@@@@     @@@@    @@@@@@@    @@@@@@@@@    @@%      @@@@@@@@@@@    \r\n"
				+ "    @@@@@@,  @@@@  @@@@%      @@@@@@@@@@@@@    *@@  @@@@@@@@@@@      \r\n"
				+ "      @@@@@@@@@@@@@  @@@@@                   @@@@@@@@@@@@@,    @@    \r\n"
				+ "          %@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    %@@@@@@    \r\n"
				+ "             @@@@                                     @@@@@@@@@      \r\n"
				+ "               @@@@@@@@%    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%        \r\n"
				+ "                     @@@@@@@@@                              ,@@      \r\n"
				+ "                 @@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%        \r\n"
				+ "                   @@@@@@@@@         @@@@@@@@@@@@@@@                 \r\n"
				+ "                       ,@@@@@@@@@@@@@               @@@@@@,          \r\n"
				+ "                                @@@@@@@@@@@@@@@@@@@@@@@@             \r\n"
				+ "                          ******########################             \r\n"
				+ "                          @@@@@@                                     \r\n"
				+ "                            @@@@@@@@@@@@@@@@@@@@@@                   \r\n"
				+ "                          @@      %@@@@@@@@@@@@%                     \r\n"
				+ "                            @@@@@@,                                  \r\n"
				+ "                              @@@@@@@@@@@@@@@                        \r\n"
				+ "                          @@      %@@@@@@                            \r\n"
				+ "                          @@@@@@                                     \r\n"
				+ "                            @@@@@@@@@@@@@                            \r\n"
				+ "                          @@                                         \r\n"
				+ "                            @@@@@@,                                  \r\n"
				+ "                              @@                                     \r\n"
				+ "                              ## ");
	}

	public static void desviacionAerea() {

		System.out.println("                                                                     \r\n"
				+ "                                .%%                                  \r\n"
				+ "                              %   %                                  \r\n"
				+ "                             %    %                                  \r\n"
				+ "                             %    % %%#(/(%                          \r\n"
				+ "                             %%   %%       /%                        \r\n"
				+ "                               %% %         %(                       \r\n"
				+ "                       .%         %  %%                              \r\n"
				+ "                        %%       %%    %                             \r\n"
				+ "                           %%%%%  %    %                             \r\n"
				+ "                                  %    %                             \r\n"
				+ "                                  %  %%                              \r\n"
				+ "                                  %                                  \r\n"
				+ "                                  %                                  \r\n"
				+ "                                  %                                  \r\n"
				+ "                                  %                                  \r\n"
				+ "                                  %                                  \r\n"
				+ "                                  %  ");
	}

	public static void opcionElementos() {

		System.out.println("1. Fuego");
		System.out.println("2. Agua");
		System.out.println("3. Tierra");
		System.out.println("4. Hielo");
		System.out.println("5. Aire");
		System.out.println("6. Electrico");
		System.out.println("7. Veneno");
	}

	public static void fuegoHabilidad() {

		System.out.println("1. Bola de fuego. Daño: " + bd.getHabilidadesFuego()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesFuego()[0].getCosteMana());
		System.out.println("2. Fogonazo. Daño: " + bd.getHabilidadesFuego()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesFuego()[1].getCosteMana());
		System.out.println("3. Barrera Napalm. Potencia: " + bd.getHabilidadesFuego()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesFuego()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesFuego()[3].getPotencia() + "Maná:" 
				+ bd.getHabilidadesFuego()[3].getCosteMana());
	}

	public static void tierraHabilidad() {

		System.out.println("1. Roca afilada. Daño: " + bd.getHabilidadesTierra()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesTierra()[0].getCosteMana());
		System.out.println("2. Avalancha. Daño: " + bd.getHabilidadesTierra()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesTierra()[1].getCosteMana());
		System.out.println("3. Muro sísmico. Potencia: " + bd.getHabilidadesTierra()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesTierra()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesTierra()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesTierra()[3].getCosteMana());
	}

	public static void hieloHabilidad() {

		System.out.println("1. Escarcha selecta. Daño:" + bd.getHabilidadesHielo()[0].getPotencia() + "Maná"
				+ bd.getHabilidadesHielo()[0].getCosteMana());
		System.out.println("2. Cero absoluto. Daño: " + bd.getHabilidadesHielo()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[1].getCosteMana());
		System.out.println("3. Iceberg. Potencia: " + bd.getHabilidadesHielo()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesHielo()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[3].getCosteMana());
	}

	public static void electHabilidad() {

		System.out.println("1. Sobrecarga. Daño: " + bd.getHabilidadesElec()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[0].getCosteMana());
		System.out.println("2. Tormenta Eléctrica. Daño: " + bd.getHabilidadesElec()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[1].getCosteMana());
		System.out.println("3. Muralla Volátil. Potencia: " + bd.getHabilidadesElec()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesElec()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesHielo()[3].getCosteMana());
	}

	public static void venenoHabilidad() {

		System.out.println("1. Dardo Envenenado. Daño: " + bd.getHabilidadesVen()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesVen()[0].getCosteMana());
		System.out.println("2. Intoxicación. Daño: " + bd.getHabilidadesVen()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesVen()[1].getCosteMana());
		System.out.println("3. Trampa de Agujas. Potencia: " + bd.getHabilidadesVen()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesVen()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesVen()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesVen()[3].getCosteMana());
	}

	public static void aguaHabilidad() {

		System.out.println("1. Rayo. Burbuja Daño: " + bd.getHabilidadesAgua()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesAgua()[0].getCosteMana());
		System.out.println("2. Maremoto. Daño: " + bd.getHabilidadesAgua()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesAgua()[1].getCosteMana());
		System.out.println("3. Torrente Cascada. Potencia: " + bd.getHabilidadesAgua()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesAgua()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesAgua()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesAgua()[3].getCosteMana());
	}

	public static void aireHabilidad() {

		System.out.println("1. Viento Cortante. Daño: " + bd.getHabilidadesAire()[0].getPotencia() + "Maná: "
				+ bd.getHabilidadesAire()[0].getCosteMana());
		System.out.println("2. Huracán. Daño: " + bd.getHabilidadesAire()[1].getPotencia() + "Maná: "
				+ bd.getHabilidadesAire()[1].getCosteMana());
		System.out.println("3. Desviación Aérea. Potencia: " + bd.getHabilidadesAire()[2].getPotencia() + "Maná: "
				+ bd.getHabilidadesAire()[2].getCosteMana());
		System.out.println("4. Curar. Potencia: " + bd.getHabilidadesAire()[3].getPotencia() + "Maná: "
				+ bd.getHabilidadesAire()[3].getCosteMana());
	}

	public static void mostrarMapa(Combate c1) {
		for (int x = 0; x < c1.getCampoBatalla().length; x++) {
			for (int y = 0; y < c1.getCampoBatalla()[x].length; y++) {

				System.out.print(c1.getCampoBatalla()[x][y]);

			}
			System.out.println();

		}
	}

}
